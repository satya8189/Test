package com.wre.model;
// Generated Apr 27, 2016 3:07:21 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="wre_dev"
)
public class User  implements java.io.Serializable {


     private Long userId;
     private AppIdentifier appIdentifier;
     private Client client;
     private String firstName;
     private String lastName;
     private String email;
     private String phone;
     private String status;
     private String password;
     private Set<Event> events = new HashSet(0);
     private Set<SurveyQuestion> surveyQuestions = new HashSet(0);
     private Set<QuestionAnswer> questionAnswers = new HashSet(0);

    public User() {
    }

    public User(AppIdentifier appIdentifier, Client client, String firstName, String lastName, String email, String phone, String status,String password, Set<Event> events, Set<SurveyQuestion> surveyQuestions, Set<QuestionAnswer> questionAnswers) {
       this.appIdentifier = appIdentifier;
       this.client = client;
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.phone = phone;
       this.status = status;
       this.password=password;
       this.events = events;
       this.surveyQuestions = surveyQuestions;
       this.questionAnswers = questionAnswers;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="User_ID", unique=true, nullable=false)
    public Long getUserId() {
        return this.userId;
    }
    
    public void setUserId(Long userId) {
        this.userId = userId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Role_ID")
    public AppIdentifier getAppIdentifier() {
        return this.appIdentifier;
    }
    
    public void setAppIdentifier(AppIdentifier appIdentifier) {
        this.appIdentifier = appIdentifier;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Client_ID")
    public Client getClient() {
        return this.client;
    }
    
    public void setClient(Client client) {
        this.client = client;
    }

    
    @Column(name="FirstName", length=100)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="LastName", length=100)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="Email", length=50)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="Phone", length=20)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="Status", length=20)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Event> getEvents() {
        return this.events;
    }
    
    public void setEvents(Set<Event> events) {
        this.events = events;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<SurveyQuestion> getSurveyQuestions() {
        return this.surveyQuestions;
    }
    
    public void setSurveyQuestions(Set<SurveyQuestion> surveyQuestions) {
        this.surveyQuestions = surveyQuestions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<QuestionAnswer> getQuestionAnswers() {
        return this.questionAnswers;
    }
    
    public void setQuestionAnswers(Set<QuestionAnswer> questionAnswers) {
        this.questionAnswers = questionAnswers;
    }

    @Column(name="Password", length=50)
	public String getPassword() {
		return password;
	}

	/**
	 * @param password the password to set
	 */
	public void setPassword(String password) {
		this.password = password;
	}




}


